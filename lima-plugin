#!/usr/bin/env bash
#
# XBar menu plugin for lima
#
# Copyright 2021, Joe Block <jpb@unixorn.net>
#
# <xbar.title>Lima Control</xbar.title>
# <xbar.version>v1.0</xbar.version>
# <xbar.author>Joe Block</xbar.author>
# <xbar.author.github>unixorn</xbar.author.github>
# <xbar.desc>Control Lima VM</xbar.desc>
# <xbar.dependencies>Lima</xbar.dependencies>
# <xbar.image>http://i.imgur.com/nQ6LzvZ.png</xbar.image>
#
# Dependencies: 
#   lima - https://github.com/lima-vm/lima

# InService output color (default green)
RUNNING_VM_COLOR="#29cc00"

# OutOfService output color (default red)
STOPPED_VM_COLOR="#ff0033"

set -o pipefail
if [[ -n "$DEBUG" ]]; then
  set -x
fi

function cleanup() {
  if [[ -d "$SCRATCH_D" ]]; then
    rm -fr "$SCRATCH_D"
  fi
}

function debug() {
  if [[ -n "$DEBUG" ]]; then
    echo "$@"
  fi
}

function fail() {
  printf '%s\n' "$1" >&2  ## Send message to stderr. Exclude >&2 if you don't want it that way.
  exit "${2-1}"  ## Return a code specified by $2 or 1 by default.
}

function has() {
  # Check if a command is in $PATH
  which "$@" > /dev/null 2>&1
}

# Set up a working scratch directory
SCRATCH_D=$(mktemp -d)

if [[ ! "$SCRATCH_D" || ! -d "$SCRATCH_D" ]]; then
  echo "Could not create temp dir"
  exit 1
fi

trap cleanup EXIT

export PATH="$PATH:/usr/local/bin"

status=$(limactl list | grep -v 'NAME       STATUS     SSH                ARCH      DIR' | awk '{ print $2 }')
if [[ "$status" == 'Running' ]]; then
  mainColor="$RUNNING_VM_COLOR"
  mainDesc="lima running"
else
  mainColor="$STOPPED_VM_COLOR"
  mainDesc="lima stopped"
fi

# Output
echo "$mainDesc | color=$mainColor"
echo "---"
echo "In: $in | color=$RUNNING_VM_COLOR"
echo "Out: $out | color=$STOPPED_VM_COLOR"